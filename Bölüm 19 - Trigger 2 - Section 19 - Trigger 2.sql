/*Bölüm 19 - Trigger 2 -

Section 19 -Trigger 2
 */
 --CREATE DATABASE DbYeni
--USE DbYeni

--CREATE TABLE TBLMUSTERI
--(
--ID INT PRIMARY KEY IDENTITY(1,1),
--AD VARCHAR(20),
--SOYAD VARCHAR(20),
--SEHIR VARCHAR(15),
--BAKIYE DECIMAL(18,2)
--)

--CREATE TABLE TBLKATEGORI
--(
--KATEGORIID INT PRIMARY KEY IDENTITY(1,1),
--AD VARCHAR(20)
--)

--CREATE TABLE TBLURUN
--(
--URUNID INT PRIMARY KEY IDENTITY(1,1),
--AD VARCHAR(20),
--ALISFIYAT DECIMAL(18,2),
--SATISFIYAT DECIMAL(18,2),
--STOK SMALLINT,
--DURUM BIT,
--KATEGORI INT
--)

--CREATE TABLE TBLSATIS
--(
--SATISID INT PRIMARY KEY IDENTITY(1,1),
--MUSTERI INT,
--URUN INT,
--TARIH DATE
--)

--ÖRNEK VERİ GİRİŞLERİ
--UPDATE TBLSTOK SET TOPLAMURUN = (SELECT COUNT(*) FROM TBLURUN)

--TETİKLEYİCİ OLUŞTURULMASI
--CREATE TRIGGER ARTTIR
--ON TBLURUN
--AFTER INSERT
--AS
--UPDATE TBLSTOK SET TOPLAMURUN += 1

--UPDATE TBLSTOK SET TOPLAMURUN = (SELECT SUM(STOK) FROM TBLURUN)

--DROP TRIGGER ARTTIR

--DEĞİŞKEN İLE PARAMETRELİ TETİKLEYİCİ KULLANIMI
--CREATE TRIGGER ARTTIR
--ON TBLURUN
--AFTER INSERT
--AS
--DECLARE @STOKSAYI INT
--SELECT @STOKSAYI = STOK FROM inserted
--UPDATE TBLSTOK SET TOPLAMURUN += @STOKSAYI

--TETİKLEYİCİNİN STOKLARI DÜŞÜRMESİ
--CREATE TRIGGER AZALT
--ON TBLURUN
--AFTER DELETE
--AS
--DECLARE @STOKSAYI INT
--SELECT @STOKSAYI = STOK FROM deleted
--UPDATE TBLSTOK SET TOPLAMURUN -= @STOKSAYI

--INSERT INTO TBLURUN (AD,STOK) VALUES ('MIXER',80)

--ÖDEV: ÜRÜN TABLOSUNUN AYNISINI BİR DAHA OLUŞTURUN. ÜRÜNÜN ADI, STOK SAYISI, ALIŞ VE SATIŞ FİYATI OLSUN.
--ÜRÜN TABLOSUNDAN BİR ÜRÜN SİLDİĞİNİZ AN O ÜRÜN YENİ OLUŞTURDUĞUNUZ TABLOYA KAYDOLSUN AMA AYNI ZAMANDA BURADAN DA SİLİNSİN.
--CREATE TRIGGER YEDEKLE
--ON TBLURUN
--AFTER DELETE
--AS
--DECLARE @AD VARCHAR(20),@STOKSAYI INT, @ALISFIYAT DECIMAL(18,2), @SATISFIYAT DECIMAL(18,2)
--SELECT @AD = AD, @STOKSAYI = STOK, @ALISFIYAT = ALISFIYAT, @SATISFIYAT = SATISFIYAT FROM deleted
--INSERT INTO TBLURUNYEDEK (AD,STOK,ALISFIYAT,SATISFIYAT) VALUES (@AD,@STOKSAYI,@ALISFIYAT,@SATISFIYAT)




--Section 19 -Trigger 2
--CREATE DATABASE DbNew
--USE DbNew

--CREATE TABLE TBLCUSTOMER
--(
--ID INT PRIMARY KEY IDENTITY(1,1),
--FIRSTNAME VARCHAR(20),
--LASTNAME VARCHAR(20),
--CITY VARCHAR(15),
--BALANCE DECIMAL(18,2)
--)

--CREATE TABLE TBLCATEGORY
--(
--CATEGORYID INT PRIMARY KEY IDENTITY(1,1),
--NAME VARCHAR(20)
--)

--CREATE TABLE TBLPRODUCT
--(
--PRODUCTID INT PRIMARY KEY IDENTITY(1,1),
--NAME VARCHAR(20),
--BUYPRICE DECIMAL(18,2),
--SELLPRICE DECIMAL(18,2),
--STOCK SMALLINT,
--STATUS BIT,
--CATEGORY INT
--)

--CREATE TABLE TBLSALES
--(
--SALESID INT PRIMARY KEY IDENTITY(1,1),
--CUSTOMER INT,
--PRODUCT INT,
--DATE DATE
--)

--EXAMPLE DATA INSERTIONS
--UPDATE TBLSTOCK SET TOTALPRODUCT = (SELECT COUNT(*) FROM TBLPRODUCT)

--TRIGGER CREATION
--CREATE TRIGGER INCREASE
--ON TBLPRODUCT
--AFTER INSERT
--AS
--UPDATE TBLSTOCK SET TOTALPRODUCT += 1

--UPDATE TBLSTOCK SET TOTALPRODUCT = (SELECT SUM(STOCK) FROM TBLPRODUCT)

--DROP TRIGGER INCREASE

--PARAMETERIZED TRIGGER WITH VARIABLES
--CREATE TRIGGER INCREASE
--ON TBLPRODUCT
--AFTER INSERT
--AS
--DECLARE @PRODUCTCOUNT INT
--SELECT @PRODUCTCOUNT = STOCK FROM inserted
--UPDATE TBLSTOCK SET TOTALPRODUCT += @PRODUCTCOUNT

--TRIGGER TO DECREASE STOCK
--CREATE TRIGGER DECREASE
--ON TBLPRODUCT
--AFTER DELETE
--AS
--DECLARE @PRODUCTCOUNT INT
--SELECT @PRODUCTCOUNT = STOCK FROM deleted
--UPDATE TBLSTOCK SET TOTALPRODUCT -= @PRODUCTCOUNT

--INSERT INTO TBLPRODUCT (NAME,STOCK) VALUES ('MIXER',80)

--HOMEWORK: CREATE ANOTHER TABLE THAT COPIES THE PRODUCT TABLE. IT SHOULD INCLUDE PRODUCT NAME, STOCK COUNT, BUY AND SELL PRICES.
--WHEN DELETING A PRODUCT FROM THE PRODUCT TABLE, IT SHOULD BE INSERTED INTO THE NEW TABLE, AND SIMULTANEOUSLY BE DELETED FROM HERE.
--CREATE TRIGGER BACKUP
--ON TBLPRODUCT
--AFTER DELETE
--AS
--DECLARE @NAME VARCHAR(20),@STOCKCOUNT INT, @BUYPRICE DECIMAL(18,2), @SELLPRICE DECIMAL(18,2)
--SELECT @NAME = NAME, @STOCKCOUNT = STOCK, @BUYPRICE = BUYPRICE, @SELLPRICE = SELLPRICE FROM deleted
--INSERT INTO TBLPRODUCTBACKUP (NAME,STOCK,BUYPRICE,SELLPRICE) VALUES (@NAME,@STOCKCOUNT,@BUYPRICE,@SELLPRICE)

